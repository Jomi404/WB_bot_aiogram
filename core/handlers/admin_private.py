from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram import Router, types, F, filters
from aiogram.fsm.context import FSMContext

import core.utils as utils

from core import keyboards_bot
from core.filters_bot import ChatTypeFilterMes, ChatTypeFilterCall, is_admin
from core.states import Admin

admin_private_router = Router()
admin_private_router.message.filter(ChatTypeFilterMes(['private']))
admin_private_router.callback_query.filter(ChatTypeFilterCall(['private']))


@admin_private_router.message(is_admin(), Command('mailing'))
async def cmd_admin(message: types.Message, state: FSMContext):
    await state.set_state(Admin.create_mailling)
    await state.set_data({})
    text = (f'–í—ã –Ω–∞—á–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏.\n\n'
            f'<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏:</b>')
    reply_markup = keyboards_bot.get_cancel_btns()
    await utils.bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=reply_markup,
                                 parse_mode=ParseMode.HTML)


@admin_private_router.message(filters.StateFilter(Admin.create_mailling))
async def process_confirm_mailling(message: types.Message, state: FSMContext):
    await state.update_data({'mailling_name': message.text})
    await state.set_state(Admin.confirm_mailling_name)
    reply_markup = keyboards_bot.getKeyboardConfirm()
    text = (f'–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ <b>{message.text}</b>\n\n'
            f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏.\n'
            f'–ò –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏—à—É <b>–í–µ—Ä–Ω–æ/–ù–µ–≤–µ—Ä–Ω–æ</b>')

    await utils.bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=reply_markup,
                                 parse_mode=ParseMode.HTML)


@admin_private_router.callback_query(filters.StateFilter(Admin.confirm_mailling_name), F.data.startswith("no"))
async def process_confirm_no_mailling(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(Admin.create_mailling)
    text = f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–Ω–æ–≤–∞:'
    await utils.bot.send_message(chat_id=callback.from_user.id, text=text)


@admin_private_router.callback_query(filters.StateFilter(Admin.confirm_mailling_name), F.data.startswith("yes"))
async def process_confirm_yes_mailling(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(Admin.input_mailling_desc)
    text = f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ <b>–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏</b>:'
    await utils.bot.send_message(chat_id=callback.from_user.id, text=text, parse_mode=ParseMode.HTML)


@admin_private_router.message(filters.StateFilter(Admin.input_mailling_desc))
async def process_confirm_descMailling(message: types.Message, state: FSMContext):
    await state.set_state(Admin.confirm_mailling_desc)
    data = await state.get_data()
    await state.update_data({'mailling_description': message.text})
    reply_markup = keyboards_bot.getKeyboardConfirm()
    text = (f'–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ <b>{message.text}</b>\n\n'
            f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏.\n'
            f'–ò –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏—à—É <b>–í–µ—Ä–Ω–æ/–ù–µ–≤–µ—Ä–Ω–æ</b>')
    await utils.bot.send_message(chat_id=message.from_user.id, text=text, reply_markup=reply_markup,
                                 parse_mode=ParseMode.HTML)


@admin_private_router.callback_query(filters.StateFilter(Admin.confirm_mailling_desc), F.data.startswith("no"))
async def process_confirm_no_descMailling(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(Admin.input_mailling_desc)
    text = f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ <b>–æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏</b> —Å–Ω–æ–≤–∞:'
    await utils.bot.send_message(chat_id=callback.from_user.id, text=text, parse_mode=ParseMode.HTML)


@admin_private_router.callback_query(filters.StateFilter(Admin.confirm_mailling_desc), F.data.startswith("yes"))
async def process_confirm_yes_descMailling(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(Admin.is_need_photo)
    reply_markup = keyboards_bot.get_is_need_photo_btns()
    text = f'–ù—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –∫ —Ä–∞—Å—Å—ã–ª–∫–µ?'
    await utils.bot.send_message(chat_id=callback.from_user.id, text=text, reply_markup=reply_markup)


@admin_private_router.callback_query(filters.StateFilter(Admin.is_need_photo), F.data.startswith("no"))
async def process_sending_mailing_no(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    data = await state.get_data()
    users_json = await utils.get_data_json(path='W:\\WB_BOT\\WB_bot_aiogram\\core\\data\\users.json')  # –ó–ê–ú–ï–ù–ò–¢–¨ –ü–£–¢–¨
    for user in users_json['users']:
        await utils.bot.send_message(chat_id=user['id'],
                                     text=f"{data['mailling_name']}\n{data['mailling_description']}")

    await utils.bot.send_message(chat_id=callback.from_user.id, text='–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.')
    await state.clear()


@admin_private_router.callback_query(filters.StateFilter(Admin.is_need_photo), F.data.startswith("yes"))
async def process_sending_mailing_yes(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(Admin.get_photo)
    text = (f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:')

    await utils.bot.send_message(chat_id=callback.from_user.id, text=text)


@admin_private_router.message(Admin.get_photo, F.photo)
async def set_photo_handler(message: types.Message, state: FSMContext):
    await state.update_data(msg_photo=message.photo[-1].file_id)
    await state.set_state(Admin.confirm_photo)
    text = (f'–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É\n\n'
            f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞ –ª–∏ —ç—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞.\n'
            f'–ò –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏—à—É <b>–í–µ—Ä–Ω–æ/–ù–µ–≤–µ—Ä–Ω–æ</b>')
    reply_markup = keyboards_bot.getKeyboardConfirm()
    await message.reply(text=text, reply_markup=reply_markup, parse_mode=ParseMode.HTML)


@admin_private_router.callback_query(filters.StateFilter(Admin.confirm_photo), F.data.startswith("no"))
async def process_get_photo(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(Admin.get_photo)
    text = f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–Ω–æ–≤–∞:'
    await utils.bot.send_message(chat_id=callback.from_user.id, text=text,
                                 parse_mode=ParseMode.HTML)


@admin_private_router.callback_query(filters.StateFilter(Admin.confirm_photo), F.data.startswith("yes"))
async def process_get_photo(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    data = await state.get_data()
    caption = (f"{data['mailling_name']}\n"
               f"{data['mailling_description']}")
    users_json = await utils.get_data_json(path="core/data/users.json")
    for user in users_json['users']:
        await utils.bot.send_photo(chat_id=user['id'], photo=data['msg_photo'], caption=caption)

    await utils.bot.send_message(chat_id=callback.from_user.id, text='–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.')
    await state.clear()


@admin_private_router.message(Admin.get_photo, ~F.photo)
async def set_photo_handler(message: types.Message, state: FSMContext):
    await message.reply(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É üèû')


@admin_private_router.callback_query(F.data.startswith("cancel"))
async def process_callback_cancel(callback_query: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await callback_query.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
